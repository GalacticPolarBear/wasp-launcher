(*
# S2SCompiler
A "Simba to Simba compiler" that compiles multiple scripts into a single one.
This is a very basic script and won't understand things like "IF" compiler directives.
*)
{$I SRL-T/osr.simba}

const
  FILE_NAME: String = 'launcher.simba';
  PATH: String = {$macro CURRENT_DIRECTORY} + 'launcher' + DirectorySeparator;
  ERASE_DIRECTIVE: String = '{$IFNDEF WS_CORE}{$I core.simba}{$ENDIF}';

const INCLUDE_DIRECTIVES: TStringArray = ['{$I ', '{$INCLUDE', '{$i ', '$include'];

function GetDirectiveIndex(content: String): Int32;
begin
  for Result := 0 to High(INCLUDE_DIRECTIVES) do
    if content.Contains(INCLUDE_DIRECTIVES[Result]) then
      Exit;
  Result := -1;
end;

function GetIncludeContent(content: String; directiveIndex: Int32): String;
var
  filePath: String;
begin
  filePath := content.After(INCLUDE_DIRECTIVES[directiveIndex]).Before('}');
  Result := ReadFileContents(PATH + filePath);
  Result := Result.Replace(ERASE_DIRECTIVE, '');
  Result := LineEnding + Result + LineEnding;
end;

function ReplaceIncludeDirective(content, sub: String; directiveIndex: Int32): String;
var
  directive: String;
begin
  directive := content.After(INCLUDE_DIRECTIVES[directiveIndex]).Before('}');
  directive := INCLUDE_DIRECTIVES[directiveIndex] + directive + '}';
  Result := content.Replace(directive, sub);
end;

var
  content, sub: String;
  index: Int32;
begin
  content := ReadFileContents(PATH + FILE_NAME);

  index := GetDirectiveIndex(content);
  while index > -1 do
  begin
    sub := GetIncludeContent(content, index);
    content := ReplaceIncludeDirective(content, sub, index);
    index := GetDirectiveIndex(content);
  end;

  if PATH = {$macro CURRENT_DIRECTORY} then
    WriteFileContents(PATH + FILE_NAME.Replace('.simba', '-compiled.simba'), content, False)
  else
    WriteFileContents({$macro CURRENT_DIRECTORY} + FILE_NAME, content, False);
end;
